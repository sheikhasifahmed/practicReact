{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["countries","name","currency","capital","App","className","map","country","Info","Counter","ExternalUsers","props","style","backgroundColor","margin","borderRadius","useState","count","setCount","onClick","users","setUsers","useEffect","fetch","then","res","json","data","console","log","userStyle","user","username","email","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAGMA,EAAY,CAChB,CAAEC,KAAM,aAAcC,SAAU,OAAQC,QAAS,SACjD,CAAEF,KAAM,MAAOC,SAAU,SAAUC,QAAS,SAC5C,CAAEF,KAAM,QAASC,SAAU,QAASC,QAAS,SAC7C,CAAEF,KAAM,KAAMC,SAAU,MAAOC,QAAS,WAmB3BC,MAhBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACGL,EAAUM,KAAI,SAACC,GAAD,OACb,cAACC,EAAD,CACEP,KAAMM,EAAQN,KACdE,QAASI,EAAQJ,QACjBD,SAAUK,EAAQL,cAGtB,cAACO,EAAD,IACA,cAACC,EAAD,QAON,SAASF,EAAKG,GAMZ,OACE,sBAAKC,MANS,CACdC,gBAAiB,aACjBC,OAAQ,OACRC,aAAc,QAGd,UACE,4DAA+BJ,EAAMV,KAArC,OACA,+BAAKU,EAAMR,QAAX,sCACA,8CAAiBQ,EAAMT,eAK7B,SAASO,IACP,MAA0BO,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAGA,OACE,gCACE,wCAAWD,KACX,wBAAQE,QALU,kBAAMD,EAASD,EAAQ,IAKzC,sBACA,wBAAQE,QALW,kBAAMD,EAASD,EAAQ,IAK1C,yBAKN,SAASP,IACP,MAA0BM,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZN,EAASM,QAEZ,IAEH,IAAMG,EAAY,CAChBjB,gBAAiB,YACjBC,OAAQ,QAEV,OACE,gCACE,iDACCM,EAAMd,KAAI,SAACyB,GAAD,OACT,sBAAKnB,MAAOkB,EAAZ,UACE,wCAAWC,EAAK9B,QAChB,4CAAe8B,EAAKC,YACpB,wCAAWD,EAAKE,kBC/E1B,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b2ab434a.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\nconst countries = [\n  { name: \"Bangladesh\", currency: \"Taka\", capital: \"Dhaka\" },\n  { name: \"USA\", currency: \"Dollar\", capital: \"Wt DC\" },\n  { name: \"India\", currency: \"Rupia\", capital: \"Delhi\" },\n  { name: \"UK\", currency: \"GBP\", capital: \"London\" },\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {countries.map((country) => (\n        <Info\n          name={country.name}\n          capital={country.capital}\n          currency={country.currency}\n        ></Info>\n      ))}\n      <Counter></Counter>\n      <ExternalUsers></ExternalUsers>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction Info(props) {\n  const myStyle = {\n    backgroundColor: \"lightcoral\",\n    margin: \"20px\",\n    borderRadius: \"10px\",\n  };\n  return (\n    <div style={myStyle}>\n      <h1>The name of my country is {props.name}.</h1>\n      <h3>{props.capital} is the capital of this country.</h3>\n      <h3>currency is {props.currency}</h3>\n    </div>\n  );\n}\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  const handleIcrease = () => setCount(count + 1);\n  const handleDecrease = () => setCount(count - 1);\n  return (\n    <div>\n      <h2>count:{count}</h2>\n      <button onClick={handleIcrease}>increase</button>\n      <button onClick={handleDecrease}>decrease</button>\n    </div>\n  );\n}\n\nfunction ExternalUsers() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setUsers(data);\n      });\n  }, []);\n\n  const userStyle = {\n    backgroundColor: \"lightblue\",\n    margin: \"20px\",\n  };\n  return (\n    <div>\n      <h2>External Users:</h2>\n      {users.map((user) => (\n        <div style={userStyle}>\n          <h3>Name: {user.name}</h3>\n          <h3>User Name:{user.username}</h3>\n          <h3>Email:{user.email}</h3>\n        </div>\n      ))}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}